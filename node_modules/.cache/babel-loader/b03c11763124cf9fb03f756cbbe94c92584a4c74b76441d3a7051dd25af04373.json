{"ast":null,"code":"var _jsxFileName = \"/Users/youssef3issa/Desktop/tasktwo/src/components/MaterialUI/Dropdown.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nexport default function MultipleSelect() {\n  _s();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        sx: {\n          width: 20\n        },\n        id: \"demo-multiple-name-label\",\n        children: \"Opportunity Browsing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelect, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});\n_c = MultipleSelect;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"names":["React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","_s","setPersonName","useState","handleChange","event","target","value","split","children","sx","m","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","label","map","_c","$RefreshReg$"],"sources":["/Users/youssef3issa/Desktop/tasktwo/src/components/MaterialUI/Dropdown.js"],"sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\nPaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n    width: 250,\n    },\n},\n};\n\nconst names = [\n'Oliver Hansen',\n'Van Henry',\n'April Tucker',\n'Ralph Hubbard',\n'Omar Alexander',\n'Carlos Abbott',\n'Miriam Wagner',\n'Bradley Wilkerson',\n'Virginia Andrews',\n'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\nreturn {\n    fontWeight:\n    personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n};\n}\n\nexport default function MultipleSelect() {\nconst theme = useTheme();\nconst [personName, setPersonName] = React.useState([]);\n\nconst handleChange = (event) => {\n    const {\n    target: { value },\n    } = event;\n    setPersonName(\n    typeof value === 'string' ? value.split(',') : value,\n    );\n};\n\nreturn (\n    <div>\n    <FormControl sx={{ m: 1, width: \"100%\" }}>\n        <InputLabel sx={{width:20}} id=\"demo-multiple-name-label\">Opportunity Browsing</InputLabel>\n        <Select\n        labelId=\"demo-multiple-name-label\"\n        id=\"demo-multiple-name\"\n        multiple\n        value={personName}\n        onChange={handleChange}\n        input={<OutlinedInput label=\"Name\" />}\n        MenuProps={MenuProps}\n        >\n        {names.map((name) => (\n            <MenuItem\n            key={name}\n            value={name}\n            style={getStyles(name, personName, theme)}\n            >\n            {name}\n            </MenuItem>\n        ))}\n        </Select>\n    </FormControl>\n    </div>\n);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}